<?php

return array (
    
        // Name of the account where you pull the Knowledgebase from
        'kb_account' => 'CHANGE_ME',

        /** Timeframe for vulnDB to 'sync' scans back 
         * For time examples, please look at the strtotime function
         *
         *  This is the timeframe we will 'sync' scans from for our inital run.  By default its 3 months, meaning I will pull back 3 months worth of scans, assuming you have enough API calls.  
         *  Each time this script runs after, it will verify which scans it already has in the database, and pull only those from Qualys which it DOES NOT have.  
         *  Assuming you do quite a bit of scanning, the inital sync here, can be quite big.  After we have our inital scans in, vulnDB will only update incrementally.
         *  If you need to sync back more than 3 months worth of scans, change the timeframe in the strtotime() function.  For more info on what it accepts, check out http://us2.php.net/strtotime
         *  Do keep in mind however, by default you only 300 API calls per day (24 hour period), per account. Each scan download will take up 1 API call.  If want to sync back 6 months, and you have 500 scans in that timeframe, then leave the initial timeframe at 3 months for the first run, and the next day (when the API call limit has reset), change the timeframe to 6 months, and vulnDB will pull the others.  
         *  
         *  http://php.net/strtotime
         */
        'scan_timeframe' => '-6 month',

        // Scan types to pull into vulnDB
        // Typically you want canceled and finished
        'scan_types_to_get' => array('Finished', 'Canceled'),

        /** 
        *   Asset data reports you wish to download by id
        *
        *   example if we want to pull in report ids 123455 and 54231 for our account named 'default', and report ids 444333, and 22212 for the 'APAC' account:
        *
        *       'adr_reports'   => array
        *       (
        *                   'default' => array 
        *                   (
        *                       '123455',
        *                       '54321',
        *                   ),
        *                   'APAC'  => array
        *                   (
        *                       '444333',
        *                       '22212',
        *                   ),
        *       );
        *                                           
        **/
        'adr_reports'   => array 
        (
                'ACCOUNT1' => array
                (
                        '1103127',
                        '11612360',
                        '1112397',
                ),
                'ACCOUNT2'   =>  array
                (
                        '112116',
                        '117231773',
                        '1155225',
                ),
                'ACCOUNT3'  => array
                (
                        '11237022'
                ),
        ),
    );
